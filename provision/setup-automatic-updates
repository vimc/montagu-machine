#!/usr/bin/env bash

set -e

CHANNEL=${CHANNEL:-montagu-reboot}
TEAMS_CHANNEL=${CHANNEL:-bot-reboot}

apt-get update
apt-get install -y unattended-upgrades curl

cat <<EOF > /etc/apt/apt.conf.d/20auto-upgrades
APT::Periodic::Update-Package-Lists "1";
APT::Periodic::Unattended-Upgrade "1";
EOF

# In /etc/apt/apt.conf.d/50unattended-upgrades, change two lines from defaults:-
# Uncomment  //Unattended-Upgrade::Remove-Unused-Dependencies "false"   and change value to "true"
# Uncomment  //Unattended-Upgrade::Automatic-Reboot "false"

sed -i 's|//Unattended-Upgrade::Remove-Unused-Dependencies "false"|Unattended-Upgrade::Remove-Unused-Dependencies "true"|' /etc/apt/apt.conf.d/50unattended-upgrades
sed -i 's|//Unattended-Upgrade::Automatic-Reboot "false"|Unattended-Upgrade::Automatic-Reboot "false"|' /etc/apt/apt.conf.d/50unattended-upgrades

# See https://help.ubuntu.com/community/AutomaticSecurityUpdates for documentation:

cat <<EOF > /etc/apt/apt.conf.d/10periodic
APT::Periodic::Update-Package-Lists "1";
APT::Periodic::Download-Upgradeable-Packages "1";
APT::Periodic::AutocleanInterval "1";
APT::Periodic::Unattended-Upgrade "1";
APT::Periodic::Verbose 2;
APT::Periodic::RandomSleep 1;
EOF

# The next section can be deprecated if we stop using slack.

export VAULT_ADDR=https://support.montagu.dide.ic.ac.uk:8200
if [ "$VAULT_AUTH_GITHUB_TOKEN" = "" ]; then
    echo -n "Please provide your GitHub personal access token for the vault: "
    read -s token
    echo ""
    export VAULT_AUTH_GITHUB_TOKEN=${token}
fi
vault login -method=github
SLACK_WEBHOOK=$(vault read -field=value secret/slack/monitor-webhook)

# This section is for Microsoft Teams, using the departmental vault server.

export VAULT_ADDR=https://vault.dide.ic.ac.uk:8200
if [ "$VAULT_AUTH_GITHUB_TOKEN" = "" ]; then
    echo -n "Please provide your GitHub personal access token for the vault: "
    read -s token
    echo ""
    export VAULT_AUTH_GITHUB_TOKEN=${token}
fi
vault login -method=github
TEAMS_WEBHOOK=$(vault read -field=value secret/reside/teams/reboot-monitor-webhook)


cat <<EOF > /etc/cron.daily/check_reboot_required
#!/usr/bin/env bash

if [ -f /var/run/reboot-required ]; then

  hostname=\$(uname -n)
  if [ \$hostname = "fi--didevimc01" ]; then
    hostname="production"
  elif [ \$hostname = "fi--didevimc02" ]; then
    hostname="support"
  elif [ \$hostname = "wpia-didess1" ]; then
    hostname="annex"
  fi

# For slack:
  curl -X POST -H 'Content-type: application/json' -d "{ \"channel\":\"#$CHANNEL\", \"username\":\"reboot-bot\", \"icon_emoji\":\":boot:\", \"text\":\"A reboot is required on "\${hostname}".montagu.dide.ic.ac.uk following automatic updates.\"}" https://hooks.slack.com/services/$SLACK_WEBHOOK
# For teams:
  curl -H 'Content-type: application/json' -d "{ \"channel\":\"#$TEAMS_CHANNEL\", \"text\":\" \", \"title\":\"Reboot required on "${hostname}".montagu.dide.ic.ac.uk following automatic updates.\"}" https://outlook.office.com/webhook/$TEAMS_WEBHOOK
fi
EOF

chmod 755 /etc/cron.daily/check_reboot_required
